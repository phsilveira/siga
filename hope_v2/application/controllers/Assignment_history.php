<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Assignment_history extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Assignment_history_model');
    } 

    /*
     * Listing of assignment_history
     */
    function index()
    {
        $data['assignment_history'] = $this->Assignment_history_model->get_all_assignment_history();
        
        $data['_view'] = 'assignment_history/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new assignment_history
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('status','Status','max_length[50]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'assignment_id' => $this->input->post('assignment_id'),
				'person_id' => $this->input->post('person_id'),
				'status' => $this->input->post('status'),
				'created_at' => $this->input->post('created_at'),
            );
            
            $assignment_history_id = $this->Assignment_history_model->add_assignment_history($params);
            redirect('assignment_history/index');
        }
        else
        {
			$this->load->model('Assignment_model');
			$data['all_assignments'] = $this->Assignment_model->get_all_assignments();

			$this->load->model('Membership_model');
			$data['all_membership'] = $this->Membership_model->get_all_membership();
            
            $data['_view'] = 'assignment_history/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a assignment_history
     */
    function edit($id)
    {   
        // check if the assignment_history exists before trying to edit it
        $data['assignment_history'] = $this->Assignment_history_model->get_assignment_history($id);
        
        if(isset($data['assignment_history']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('status','Status','max_length[50]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'assignment_id' => $this->input->post('assignment_id'),
					'person_id' => $this->input->post('person_id'),
					'status' => $this->input->post('status'),
					'created_at' => $this->input->post('created_at'),
                );

                $this->Assignment_history_model->update_assignment_history($id,$params);            
                redirect('assignment_history/index');
            }
            else
            {
				$this->load->model('Assignment_model');
				$data['all_assignments'] = $this->Assignment_model->get_all_assignments();

				$this->load->model('Membership_model');
				$data['all_membership'] = $this->Membership_model->get_all_membership();

                $data['_view'] = 'assignment_history/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The assignment_history you are trying to edit does not exist.');
    } 

    /*
     * Deleting assignment_history
     */
    function remove($id)
    {
        $assignment_history = $this->Assignment_history_model->get_assignment_history($id);

        // check if the assignment_history exists before trying to delete it
        if(isset($assignment_history['id']))
        {
            $this->Assignment_history_model->delete_assignment_history($id);
            redirect('assignment_history/index');
        }
        else
            show_error('The assignment_history you are trying to delete does not exist.');
    }
    
}

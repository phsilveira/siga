<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Assignment extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Assignment_model');

        if(!$this->session->userdata('is_logged_in')){
            redirect('admin/login');
        }
    } 

    /*
     * Listing of assignments
     */
    function index()
    {

        //all the posts sent by the view
        $item_id = $this->input->post('item_id');        
        $reason_id = $this->input->post('reason_id');        
        $status_id = $this->input->post('status_id');        
        $search_string = $this->input->post('search_string');        
        $order = $this->input->post('order'); 
        $order_type = $this->input->post('order_type'); 

        $params['limit'] = 10; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;

        // $params['']
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('assignment/index?');
        $config['total_rows'] = $this->Assignment_model->get_all_assignments_count();
        $this->pagination->initialize($config);

        $data['assignments'] = $this->Assignment_model->get_all_assignments($params);
        
        $data['_view'] = 'assignment/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new assignment
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'asset_id' => $this->input->post('asset_id'),
				'created_by_person_id' => $this->input->post('created_by_person_id'),
				'assignmented_for_person_id' => $this->input->post('assignmented_for_person_id'),
				'cost_center_id' => $this->input->post('cost_center_id'),
				'status_id' => $this->input->post('status_id'),
				'origin_location_id' => $this->input->post('origin_location_id'),
				'destiny_location_id' => $this->input->post('destiny_location_id'),
				'reason_id' => $this->input->post('reason_id'),
				'item_id' => $this->input->post('item_id'),
				'status' => $this->input->post('status'),
				'created_at' => $this->input->post('created_at'),
				'updated_at' => $this->input->post('updated_at'),
				'deleted_at' => $this->input->post('deleted_at'),
				'start_at' => $this->input->post('start_at'),
				'end_at' => $this->input->post('end_at'),
				'answer_at' => $this->input->post('answer_at'),
				'scheduled_at' => $this->input->post('scheduled_at'),
				'comments' => $this->input->post('comments'),
            );
            
            $assignment_id = $this->Assignment_model->add_assignment($params);
            redirect('assignment/index');
        }
        else
        {
			$this->load->model('Asset_model');
			$data['all_assets'] = $this->Asset_model->get_all_assets();

			$this->load->model('Membership_model');
			$data['all_membership'] = $this->Membership_model->get_all_membership();
			$data['all_membership'] = $this->Membership_model->get_all_membership();

			$this->load->model('Cost_center_model');
			$data['all_cost_centers'] = $this->Cost_center_model->get_all_cost_centers();

			$this->load->model('Assignment_statu_model');
			$data['all_assignment_status'] = $this->Assignment_statu_model->get_all_assignment_status();

			$this->load->model('Location_model');
			$data['all_locations'] = $this->Location_model->get_all_locations();
			$data['all_locations'] = $this->Location_model->get_all_locations();

			$this->load->model('Reason_model');
			$data['all_reasons'] = $this->Reason_model->get_all_reasons();

			$this->load->model('Item_model');
			$data['all_items'] = $this->Item_model->get_all_items();
            
            $data['_view'] = 'assignment/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a assignment
     */
    function edit($id)
    {   
        // check if the assignment exists before trying to edit it
        $data['assignment'] = $this->Assignment_model->get_assignment($id);
        
        if(isset($data['assignment']['id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'asset_id' => $this->input->post('asset_id'),
					'created_by_person_id' => $this->input->post('created_by_person_id'),
					'assignmented_for_person_id' => $this->input->post('assignmented_for_person_id'),
					'cost_center_id' => $this->input->post('cost_center_id'),
					'status_id' => $this->input->post('status_id'),
					'origin_location_id' => $this->input->post('origin_location_id'),
					'destiny_location_id' => $this->input->post('destiny_location_id'),
					'reason_id' => $this->input->post('reason_id'),
					'item_id' => $this->input->post('item_id'),
					'status' => $this->input->post('status'),
					'created_at' => $this->input->post('created_at'),
					'updated_at' => $this->input->post('updated_at'),
					'deleted_at' => $this->input->post('deleted_at'),
					'start_at' => $this->input->post('start_at'),
					'end_at' => $this->input->post('end_at'),
					'answer_at' => $this->input->post('answer_at'),
					'scheduled_at' => $this->input->post('scheduled_at'),
					'comments' => $this->input->post('comments'),
                );

                $this->Assignment_model->update_assignment($id,$params);            
                redirect('assignment/index');
            }
            else
            {
				$this->load->model('Asset_model');
				$data['all_assets'] = $this->Asset_model->get_all_assets();

				$this->load->model('Membership_model');
				$data['all_membership'] = $this->Membership_model->get_all_membership();
				$data['all_membership'] = $this->Membership_model->get_all_membership();

				$this->load->model('Cost_center_model');
				$data['all_cost_centers'] = $this->Cost_center_model->get_all_cost_centers();

				$this->load->model('Assignment_statu_model');
				$data['all_assignment_status'] = $this->Assignment_statu_model->get_all_assignment_status();

				$this->load->model('Location_model');
				$data['all_locations'] = $this->Location_model->get_all_locations();
				$data['all_locations'] = $this->Location_model->get_all_locations();

				$this->load->model('Reason_model');
				$data['all_reasons'] = $this->Reason_model->get_all_reasons();

				$this->load->model('Item_model');
				$data['all_items'] = $this->Item_model->get_all_items();

                $data['_view'] = 'assignment/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The assignment you are trying to edit does not exist.');
    } 

    /*
     * Deleting assignment
     */
    function remove($id)
    {
        $assignment = $this->Assignment_model->get_assignment($id);

        // check if the assignment exists before trying to delete it
        if(isset($assignment['id']))
        {
            $this->Assignment_model->delete_assignment($id);
            redirect('assignment/index');
        }
        else
            show_error('The assignment you are trying to delete does not exist.');
    }
    
}

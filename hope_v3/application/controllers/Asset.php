<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Asset extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Asset_model');
    } 

    /*
     * Listing of assets
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('asset/index?');
        $config['total_rows'] = $this->Asset_model->get_all_assets_count();
        $this->pagination->initialize($config);

        $data['assets'] = $this->Asset_model->get_all_assets($params);
        
        $data['_view'] = 'asset/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new asset
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('asset_tag','Asset Tag','required|max_length[50]');
		$this->form_validation->set_rules('status','Status','max_length[50]');
		$this->form_validation->set_rules('status_id','Status Id','required|integer');
		$this->form_validation->set_rules('current_location_id','Current Location Id','required|integer');
		$this->form_validation->set_rules('description','Description','max_length[200]');
		$this->form_validation->set_rules('user_id','User Id','integer');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'item_id' => $this->input->post('item_id'),
				'cost_center_id' => $this->input->post('cost_center_id'),
				'status_id' => $this->input->post('status_id'),
				'current_location_id' => $this->input->post('current_location_id'),
				'user_id' => $this->input->post('user_id'),
				'asset_tag' => $this->input->post('asset_tag'),
				'created_at' => $this->input->post('created_at'),
				'updated_at' => $this->input->post('updated_at'),
				'deleted_at' => $this->input->post('deleted_at'),
				'acquired_at' => $this->input->post('acquired_at'),
				'status' => $this->input->post('status'),
				'description' => $this->input->post('description'),
            );
            
            $asset_id = $this->Asset_model->add_asset($params);
            redirect('asset/index');
        }
        else
        {
			$this->load->model('Item_model');
			$data['all_items'] = $this->Item_model->get_all_items();

			$this->load->model('Cost_center_model');
			$data['all_cost_centers'] = $this->Cost_center_model->get_all_cost_centers();

			$this->load->model('Assignment_statu_model');
			$data['all_assignment_status'] = $this->Assignment_statu_model->get_all_assignment_status();

			$this->load->model('Location_model');
			$data['all_locations'] = $this->Location_model->get_all_locations();

			$this->load->model('Membership_model');
			$data['all_membership'] = $this->Membership_model->get_all_membership();
            
            $data['_view'] = 'asset/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a asset
     */
    function edit($id)
    {   
        // check if the asset exists before trying to edit it
        $data['asset'] = $this->Asset_model->get_asset($id);
        
        if(isset($data['asset']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('asset_tag','Asset Tag','required|max_length[50]');
			$this->form_validation->set_rules('status','Status','max_length[50]');
			$this->form_validation->set_rules('status_id','Status Id','required|integer');
			$this->form_validation->set_rules('current_location_id','Current Location Id','required|integer');
			$this->form_validation->set_rules('description','Description','max_length[200]');
			$this->form_validation->set_rules('user_id','User Id','integer');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'item_id' => $this->input->post('item_id'),
					'cost_center_id' => $this->input->post('cost_center_id'),
					'status_id' => $this->input->post('status_id'),
					'current_location_id' => $this->input->post('current_location_id'),
					'user_id' => $this->input->post('user_id'),
					'asset_tag' => $this->input->post('asset_tag'),
					'created_at' => $this->input->post('created_at'),
					'updated_at' => $this->input->post('updated_at'),
					'deleted_at' => $this->input->post('deleted_at'),
					'acquired_at' => $this->input->post('acquired_at'),
					'status' => $this->input->post('status'),
					'description' => $this->input->post('description'),
                );

                $this->Asset_model->update_asset($id,$params);            
                redirect('asset/index');
            }
            else
            {
				$this->load->model('Item_model');
				$data['all_items'] = $this->Item_model->get_all_items();

				$this->load->model('Cost_center_model');
				$data['all_cost_centers'] = $this->Cost_center_model->get_all_cost_centers();

				$this->load->model('Assignment_statu_model');
				$data['all_assignment_status'] = $this->Assignment_statu_model->get_all_assignment_status();

				$this->load->model('Location_model');
				$data['all_locations'] = $this->Location_model->get_all_locations();

				$this->load->model('Membership_model');
				$data['all_membership'] = $this->Membership_model->get_all_membership();

                $data['_view'] = 'asset/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The asset you are trying to edit does not exist.');
    } 

    /*
     * Deleting asset
     */
    function remove($id)
    {
        $asset = $this->Asset_model->get_asset($id);

        // check if the asset exists before trying to delete it
        if(isset($asset['id']))
        {
            $this->Asset_model->delete_asset($id);
            redirect('asset/index');
        }
        else
            show_error('The asset you are trying to delete does not exist.');
    }
    
}
